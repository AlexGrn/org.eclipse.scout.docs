/*******************************************************************************
 * Copyright (c) 2015 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 ******************************************************************************/
package org.eclipse.scout.contacts.event.shared.person;

import java.util.Date;

import javax.annotation.Generated;

import org.eclipse.scout.commons.annotations.Extends;
import org.eclipse.scout.contacts.shared.person.PersonFormData;
import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractFormFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Extends(PersonFormData.class)
@Generated(value = "org.eclipse.scout.contacts.event.client.person.PersonFormTabExtension", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class PersonFormTabExtensionData extends AbstractFormFieldData {

  private static final long serialVersionUID = 1L;

  public PersonFormTabExtensionData() {
  }

  public Events getEvents() {
    return getFieldByClass(Events.class);
  }

  public static class Events extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    public Events() {
    }

    @Override
    public EventsRowData addRow() {
      return (EventsRowData) super.addRow();
    }

    @Override
    public EventsRowData addRow(int rowState) {
      return (EventsRowData) super.addRow(rowState);
    }

    @Override
    public EventsRowData createRow() {
      return new EventsRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return EventsRowData.class;
    }

    @Override
    public EventsRowData[] getRows() {
      return (EventsRowData[]) super.getRows();
    }

    @Override
    public EventsRowData rowAt(int index) {
      return (EventsRowData) super.rowAt(index);
    }

    public void setRows(EventsRowData[] rows) {
      super.setRows(rows);
    }

    public static class EventsRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String id = "id";
      public static final String title = "title";
      public static final String starts = "starts";
      public static final String city = "city";
      public static final String country = "country";
      private String m_id;
      private String m_title;
      private Date m_starts;
      private String m_city;
      private String m_country;

      public EventsRowData() {
      }

      public String getId() {
        return m_id;
      }

      public void setId(String id) {
        m_id = id;
      }

      public String getTitle() {
        return m_title;
      }

      public void setTitle(String title) {
        m_title = title;
      }

      public Date getStarts() {
        return m_starts;
      }

      public void setStarts(Date starts) {
        m_starts = starts;
      }

      public String getCity() {
        return m_city;
      }

      public void setCity(String city) {
        m_city = city;
      }

      public String getCountry() {
        return m_country;
      }

      public void setCountry(String country) {
        m_country = country;
      }
    }
  }
}
